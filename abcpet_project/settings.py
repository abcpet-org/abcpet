"""
Django settings for abcpet_project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from django.conf import settings

LOGOUT_REDIRECT_URL = '/administrador/login/'

# Añade ambos dominios a la lista de orígenes confiables para CSRF
# Mantén tu configuración actual de SITE_DOMAIN 
SITE_DOMAIN = 'https://abcpet.co'

# Actualiza esta configuración para incluir los tres dominios
CSRF_TRUSTED_ORIGINS = [
    'https://abcpet.cl',
    'https://abcpet.co',
    'https://abcpet-c7a6c0bbb4d4a5cz.eastus-01.azurewebsites.net'
]

# Configuraciones para manejar proxies en Azure
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Configuraciones de seguridad recomendadas
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
    }
}



SITE_DOMAIN = 'https://abcpet.co'


BASE_DIR = Path(__file__).resolve().parent.parent




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m5hy37x)33(!2&5@)!)z*tr9qql9pk34rr7f*xerf72z7+ni45'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'abcpet_app',
    'multiupload',
    'rest_framework', 
    'rest_framework.authtoken',
    'multiselectfield',
    'mathfilters',


    
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'abcpet_app.middleware.LoginDetailMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'abcpet_app.middleware.AdminRoleMiddleware',
]

ROOT_URLCONF = 'abcpet_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'abcpet_app.context_processors.add_user_profile',
            ],
        },
    },
]

WSGI_APPLICATION = 'abcpet_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Configuración de sesión
SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_NAME = "sessionid"
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas, por ejemplo)


# Definir las rutas de los archivos de medios para producción
# URL base para los archivos de medios
MEDIA_URL = '/media/'

# Ruta en el sistema de archivos donde se almacenarán los archivos de medios
MEDIA_ROOT = BASE_DIR / 'media'

    


    



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',  # Ajusta el nivel según sea necesario (DEBUG, INFO, ERROR, etc.)
    },
}


FIELD_ENCRYPTION_KEY = '050060420922'
DATE_INPUT_FORMATS = ['%d-%m-%Y']
LOGIN_URL = '/administrador/login/'






AUTHENTICATION_BACKENDS = [
    'abcpet_app.authentication_backends.EmailAuthBackend',  # Ruta a tu backend personalizado
]

AUTH_USER_MODEL = 'abcpet_app.CustomUser'



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'abcpetchileabcpet@gmail.com'
EMAIL_HOST_PASSWORD = 'jjmz zvhy tbhv cxwl'



WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = True


STATIC_ROOT = BASE_DIR / 'staticfiles'


STATIC_TMP = os.path.join(BASE_DIR, 'static')


os.makedirs(STATIC_TMP, exist_ok=True)
os.makedirs(STATIC_ROOT, exist_ok=True)



# Configuración de archivos estáticos
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]


#páginas de error personalizadas
handler403 = 'django.views.defaults.permission_denied'